{"version":3,"sources":["Components/Card.js","Components/Header.js","Components/DistanceSlider.js","App.js","serviceWorker.js","index.js"],"names":["Card","data","this","props","propdata","react_default","a","createElement","CardContainer","CardTitle","CardTag","CardDistance","CardImage","src","Details","CustomHR","Component","styled","div","_templateObject","img","_templateObject2","h3","_templateObject3","p","_templateObject4","_templateObject5","span","_templateObject6","_templateObject7","Header","Grid","Title","TitleText","Settings","Hamburger","Header_templateObject","Header_templateObject2","Header_templateObject3","Header_templateObject4","Header_templateObject5","DistanceSlider","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_maxDistance","handleSlider","event","newDistance","target","value","setState","currentDistance","handleDistanceChanged","state","type","min","max","onChange","App","componentWillMount","locations","location","maxLoad","filter","distance","radius","length","loadMore","load","updateDistance","ratio","newRadius","newMaxLoad","bind","assertThisInitialized","_this2","App_Grid","Components_Header","Body","slice","map","index","Components_Card","LoadMore","onClick","DistanceSlider_DistanceSlider","App_templateObject","App_templateObject2","App_templateObject3","App_templateObject4","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca2d3331.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\n\nclass Card extends Component{\n  render() {\n    let data = this.props.propdata\n    return (\n      <CardContainer>\n        <CardTitle>\n          {data['building']}\n        </CardTitle>\n        <CardTag>\n          {data['type']}\n        </CardTag>\n        <CardDistance>\n          {data['distance']}\n        </CardDistance>\n        <CardImage src={\"https://static.thenounproject.com/png/82078-200.png\"} />\n        <Details>&gt;</Details>\n        <CustomHR />\n      </CardContainer>\n    );\n  }\n}\n\nconst CardContainer = styled.div`\n  margin:0px;\n  padding:15px;\n  color:#170c27;\n  position:relative;\n  :nth-child(odd) {\n    background:#edecf9;\n  }\n`;\n\nconst CardImage = styled.img`\n  position:absolute;\n  top:3px;\n  right:30px;\n  width:90px;\n  height:90px;\n`;\n\nconst CardTitle = styled.h3`\n  margin:0px;\n  font-size:24px;\n  white-space:nowrap;\n  text-overflow: ellipsis;\n  width:calc(100% - 120px);\n`;\n\nconst CardTag = styled.p`\n  margin:0px;\n  padding-left:5px;\n  font-size:16px;\n  height:20px;\n  overflow:hidden;\n  white-space:nowrap;\n  text-overflow: ellipsis;\n  width:calc(100% - 120px);\n`;\n\nconst CardDistance = styled.p`\n  margin:0px;\n  font-style:italic;\n  color:#AEA3B0;\n  padding-left:5px;\n  font-size:16px;\n`;\n\nconst Details = styled.span`\n  font-size:28px;\n  color:#E3D0D8;\n  position:absolute;\n  top:30px;\n  right:5px;\n`;\n\nconst CustomHR = styled.div`\n  margin:0 10%;\n  height:2px;\n  border-bottom:1px solid black;\n  position:absolute;\n  bottom:0px;\n  left:0px;\n`;\n\nexport default Card;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nclass Header extends Component {\n  render() {\n    return (\n      <Grid>\n        <Title>\n          <TitleText>Follow <br/> My <br/> Lead</TitleText>\n        </Title>\n        <Settings>\n          <Hamburger> &#9776; </Hamburger>\n        </Settings>\n      </Grid>\n    );\n  }\n}\n\nconst Grid = styled.div`\n  grid-row: 1;\n  z-index: 1;\n  display: grid;\n  position: fixed;\n  grid-template-columns: 1fr 1fr;\n  vertical-align: middle;\n  width: 100%;\n  height: 75px;\n  background-color: white;\n  box-shadow: 0px 2px 1px rgba(0,0,0,0.2);\n  background:#4E2A84;\n  color:white;\n`;\n\nconst Title = styled.div`\n  margin-left: 15px;\n  font-size: 1em;\n  grid-column: 1;\n  font-weight:800;\n`;\n\nconst TitleText = styled.p`\n  margin: 0;\n  position: relative;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n\nconst Settings = styled.div`\n  grid-column: 2;\n  width: 100%;\n  position: relative;\n`;\n\nconst Hamburger = styled.p`\n  position: relative;\n  font-size: 2em;\n  margin: 0 15px;\n  margin-top: -5px;\n  width: 30px;\n  float: right;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n\nexport default Header;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\n/// The component that lets the user select the distance for places to see.\n/// Pass a prop called handleDistanceChanged as a function to handle the new distance selected.\nexport default class DistanceSlider extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentDistance: this._maxDistance / 2\n        }\n    }\n\n    propTypes: {\n        handleDistanceChanged: PropTypes.func.isRequired\n    }\n\n    _maxDistance = 10\n\n    handleSlider = event => {\n        const newDistance = event.target.value\n        this.setState({\n            currentDistance: newDistance\n        })\n        this.props.handleDistanceChanged(newDistance)\n    }\n\n    render() {\n        return (\n            <input type=\"range\" min={0} max={this._maxDistance} value={this.state.currentDistance} onChange={this.handleSlider} />\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Card from './Components/Card.js'\nimport Header from './Components/Header.js'\nimport DistanceSlider from './Components/DistanceSlider'\nimport data from './location.json';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locations: [],\n      load: 8,\n      radius: 2.5,\n      maxLoad: 0\n    }\n\n    this.updateDistance = this.updateDistance.bind(this);\n  }\n\n  componentWillMount = () => {\n    this.setState({ locations: data.location, maxLoad: data.location.filter(location => location.distance <= this.state.radius).length });\n  };\n\n  loadMore = () => {\n    let numNewPosts = 8\n    this.setState({ load: this.state.load + numNewPosts });\n  };\n\n  updateDistance = ratio => {\n    let maxRadius = 5;\n    let newRadius = ratio/10*maxRadius;\n    let newMaxLoad = this.state.locations.filter(location => location.distance <= newRadius).length;\n    this.setState({ radius: newRadius, maxLoad: newMaxLoad, load: 8 });\n  };\n\n  render() {\n    return (\n      <Grid>\n        <Header/>\n        <Body>\n          {this.state.locations\n            .filter(location => location.distance <= this.state.radius)\n            .slice(0, this.state.load)\n            .map((data,index) => (\n            <Card propdata={data}/>\n          ))}\n          {this.state.load < this.state.maxLoad &&\n            <LoadMore onClick={this.loadMore}> Load More </LoadMore>}\n          <DistanceSlider handleDistanceChanged={ratio => this.updateDistance(ratio)} />\n          Radius: {this.state.radius} Miles\n        </Body>\n      </Grid>\n    );\n  }\n}\n\nconst Cards = styled.div`\n`;\n\nconst Grid = styled.div`\n  display: grid;\n  min-height: 100vh;\n  grid-template-rows: 75px 1fr;\n`;\n\nconst Body = styled.div`\n  grid-row: 2;\n  width: 100%;\n  height: 100%;\n  background-color: #F7F7FF;\n`;\n\nconst LoadMore = styled.div`\n  margin: 10px 15px;\n  text-align: center;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}